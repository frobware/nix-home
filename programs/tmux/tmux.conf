# source-file ~/.tmux.conf

unbind C-b
set -g prefix C-o
bind o send-prefix

# Changing the Default Delay
#
# tmux adds a very small delay when sending commands, and this delay
# can interfere with other programs such as the Vim text editor. We
# can set this delay so it’s much more responsive:

set -s escape-time 1

# The window index will start at 1. This also means we can use PREFIX
# 1 to jump to the first window, instead of PREFIX 0.

set -g base-index 1
setw -g pane-base-index 1

bind r source-file ~/.tmux.conf\; display "Reloaded!"
#bind C-b send-prefix

bind | split-window -h
bind - split-window -v

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind C-o last-window

# Resizing Panes
#
# To resize a pane, we can enter Command mode and type resize-pane -D
# to resize a pane downward one row at a time. We can increase the
# resizing increment by passing a number after the direction, such as
# resize-pane -D 5, but the command itself is pretty verbose.
#
# Let’s make some keybindings to make resizing panes easier.
#
# Let’s use a variation of the Vim movement keys to resize
# windows. We’ll use PREFIX H, PREFIX J, PREFIX K, and PREFIX L to
# change the size of the panes:
#
# We resize panes in increments, so that means that each time we want
# to resize the pane, we need to use the prefix. But if we use the -r
# flag, we can specify that we want the key to be repeatable, meaning
# we can press the prefix key only once and then continuously press
# the defined key within the repeat limit.  The default repeat limit
# is 500 milliseconds, and we can change that by setting the
# repeat-time option to a higher value.

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Handling the Mouse
set -g mouse on

# set -g default-terminal "tmux-24bit"
# set-option -ga terminal-overrides ",tmux-24bit:Tc"

#set -g default-terminal "xterm-256color"
#set-option -ga terminal-overrides ",xterm-256color:Tc"

bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# 3 hail mary's and you're out!
set-environment -g 'IGNOREEOF' 2

# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

setw -g monitor-activity on
set -g visual-activity on

#set -g default-command "/bin/bash --init-file ~/.bash_profile"

# From:
#
#   https://mutelight.org/practical-tmux
#
# By default, all windows in a session are constrained to the size of
# the smallest client connected to that session, even if both clients
# are looking at different windows. It seems that in this particular
# case, Screen has the better default where a window is only
# constrained in size if a smaller client is actively looking at it.
# This behaviour can be fixed by setting tmux's aggressive-resize
# option.
setw -g aggressive-resize on

# Window titles
set -g set-titles on
set -g history-limit 4096
setw -g mode-keys emacs
set -g set-titles-string "#T"

# session initialization
# new-session   -n shell
# new-window -d -n dev    -t :2
# new-window -d -n debug  -t :3
# new-window -d -n db     -t :4
# new-window -d -n ec2    -t :5
# new-window -d -n irssi  -t :6

# all sessions that do not override it will automatically be
# renumbered.
set-option -g renumber-windows on

# Conveniently bounce between windows/panes
bind C-o last-window
bind C-p last-pane

# Tmux 2.0 only needs this single option to enable mouse scrolling
setw -g mouse on

# List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'

set -g status-bg green
set -g status-fg black
set -g status on
#set-option -g status-attr bright

set-window-option -g clock-mode-colour colour226
set-option -g status-position top
